environment:
  # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
  # /E:ON and /V:ON options are not enabled in the batch script intepreter
  # See: http://stackoverflow.com/a/13751649/163740
  CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\.appveyor\\run_with_env.cmd"
  TWINE_USERNAME: "anthrotype"
  TWINE_PASSWORD:
    secure: 9L/DdqoIILlN7qCh0lotvA==

  matrix:
    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python37"
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python38"
      PYTHON_VERSION: "3.8"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python38-x64"
      PYTHON_VERSION: "3.8"
      PYTHON_ARCH: "64"

# matrix:
#   fast_finish: true

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"

install:
  # Prepend newly installed Python to the PATH
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade pip to avoid out-of-date warnings
  - "python -m pip install --disable-pip-version-check --upgrade pip"
  - "pip --version"

  # Upgrade setuptools, wheel and virtualenv
  - "pip install --upgrade setuptools wheel virtualenv"

  # Create new virtual environment and activate it
  - "python -m virtualenv venv"
  - "venv\\Scripts\\activate"
  - "python -c \"import sys; print(sys.executable)\""

  # Install build and test dependencies
  - "%CMD_IN_ENV% pip install cython setuptools_scm setuptools_scm_git_archive sympy pytest"

build: off

test_script:
  # create binary packages
  - "%CMD_IN_ENV% pip wheel -w wheelhouse ."
  # install wheel so we can test it
  - pip install --no-index --find-links wheelhouse pyclipper
  # Run the project tests
  - "%CMD_IN_ENV% pytest"

after_test:
  - ps: "ls wheelhouse"

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report
  - path: wheelhouse\*.whl

# Deploy wheels on tags to PyPI
on_success:
  - ps: >-
      if($env:APPVEYOR_REPO_TAG -eq 'true') {
        Write-Output ("Deploying " + $env:APPVEYOR_REPO_TAG_NAME + " to PyPI...")
        pip install --upgrade twine
        twine upload wheelhouse\*.whl
      } else {
        Write-Output "Not deploying as this is not a tagged commit"
      }
